/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Login;

import com.mycompany.main.main;
import conex.conexion;
import java.awt.Color;
import ventanaPrincipal.VentanaPrincipal;
import java.awt.Image;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import conex.conexion;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import org.mindrot.jbcrypt.BCrypt;
/**
 *
 * @author juand
 */
public class crearCuenta extends javax.swing.JFrame {

    /**
     * Creates new form crearCuenta
     */
    public crearCuenta() {
        
        initComponents();
          //cargamos la ruta de la imagen
        ImageIcon logo = new ImageIcon("src/main/java/imagenes/bell-solid-24.png");
        //establecemos la imagen como icono
         setIconImage(logo.getImage());
        setLocationRelativeTo(null);
        SetImageLabel(jLabel1, "src/main/java/imagenes/pexels-life-of-pix-7974.jpg");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jTextField9 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("STOKY");
        jLabel10.setToolTipText("");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 250, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, 0, 260, 640));

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("              INFORMACION EMPRESA");

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel3.setText("Nombre de la empresa");

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel4.setText("Nit de la Empresa");

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel5.setText("Telefono de la Empresa");

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel6.setText("Dirección de la Empresa");

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel7.setText("Correo Electronico de la Empresa");

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel9.setText("NOMBRE");

        jTextField1.setBackground(new java.awt.Color(51, 51, 55));
        jTextField1.setForeground(new java.awt.Color(231, 231, 231));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(51, 51, 55));
        jTextField2.setForeground(new java.awt.Color(231, 231, 231));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setBackground(new java.awt.Color(51, 51, 55));
        jTextField3.setForeground(new java.awt.Color(231, 231, 231));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setBackground(new java.awt.Color(51, 51, 55));
        jTextField4.setForeground(new java.awt.Color(231, 231, 231));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.setBackground(new java.awt.Color(51, 51, 55));
        jTextField5.setForeground(new java.awt.Color(231, 231, 231));

        jButton3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("X");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel11.setText("DOCUMENTO");

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel12.setText("TELEFONO");

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel13.setText("DIRECCION");

        jLabel14.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel14.setText("CORREO ELECTRONICO");

        jLabel15.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel15.setText("ROOT");

        jLabel16.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel16.setText("CONTRASEÑA");

        jTextField6.setBackground(new java.awt.Color(51, 51, 55));
        jTextField6.setForeground(new java.awt.Color(231, 231, 231));

        jTextField7.setBackground(new java.awt.Color(51, 51, 55));
        jTextField7.setForeground(new java.awt.Color(231, 231, 231));

        jTextField8.setBackground(new java.awt.Color(51, 51, 55));
        jTextField8.setForeground(new java.awt.Color(231, 231, 231));

        jTextField10.setBackground(new java.awt.Color(51, 51, 55));
        jTextField10.setForeground(new java.awt.Color(231, 231, 231));

        jTextField11.setBackground(new java.awt.Color(51, 51, 55));
        jTextField11.setForeground(new java.awt.Color(231, 231, 231));

        jPasswordField3.setBackground(new java.awt.Color(51, 51, 55));
        jPasswordField3.setForeground(new java.awt.Color(231, 231, 231));
        jPasswordField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField3ActionPerformed(evt);
            }
        });

        jTextField9.setBackground(new java.awt.Color(51, 51, 55));
        jTextField9.setForeground(new java.awt.Color(231, 231, 231));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("INFORMACIÓN DEL ADMINISTRADOR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField3)
                            .addComponent(jTextField1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jTextField10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTextField8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jTextField7))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel13))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField11)
                            .addComponent(jTextField6)
                            .addComponent(jPasswordField3)
                            .addComponent(jTextField9))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 500, 540));

        jButton1.setBackground(new java.awt.Color(186, 198, 250));
        jButton1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton1.setText("CREAR");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 600, 99, -1));

        jPasswordField2.setBackground(new java.awt.Color(51, 51, 55));
        jPasswordField2.setForeground(new java.awt.Color(231, 231, 231));
        jPasswordField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jPasswordField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 550, 250, 25));

        jLabel17.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel17.setText("Confirmar contraseña");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, -1, 22));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //llamada a  los campos
        String nombreEmpresa            = jTextField3.getText();
        String nit_Empresa              = jTextField1.getText();
        String telefonoEmpresa          = jTextField2.getText();
        String direccionEmpresa         = jTextField4.getText();
        String correoElectronicoEmpresa = jTextField5.getText();
        String nombredeAdministrador    = jTextField7.getText();
        String cedulaAdministrador      = jTextField8.getText();
        String telefonoAdministrador    = jTextField10.getText();
        String direccionDeadministrador = jTextField11.getText();
        String correoDeadministrador    = jTextField9.getText();
        String Rotadministrador         = jTextField6.getText();
        String contraseñaconfirmacion   = jPasswordField2.getText();
        String contraseñainicial        = jPasswordField3.getText();
        String contraseñaEncrptada = encriptarContrasena(contraseñaconfirmacion);
        
       
        if (nit_Empresa.length() >= 1 && nit_Empresa.length() <= 10) {
            if(telefonoEmpresa.length() == 10){
                // Validación del correo electrónico
                if (esGmailValido(correoElectronicoEmpresa)) {
                    if(telefonoAdministrador.length() == 10){
                        if(esGmailValido(correoDeadministrador)){
                            
                            if(!contraseñainicial.isEmpty()){
                                if(!contraseñaconfirmacion.isEmpty()){
                                    if(contraseñainicial.equals(contraseñaconfirmacion)){
                                        try {
                                            if(!esNombreExistente(nombredeAdministrador)){
                                                // Guardar datos
                                                crearAdministrador(
                                                nombreEmpresa, 
                                                nit_Empresa, 
                                                telefonoEmpresa,
                                                direccionEmpresa,
                                                correoElectronicoEmpresa, 
                                                nombredeAdministrador, 
                                                cedulaAdministrador, 
                                                telefonoAdministrador, 
                                                direccionDeadministrador,
                                                correoDeadministrador, 
                                                Rotadministrador, 
                                                contraseñaEncrptada);
                                            }else{
                                                mostrarMensajeError("El usuario ya se encuentra en la base de datos.");
                                            }
                                        } catch (ClassNotFoundException ex) {
                                            Logger.getLogger(crearCuenta.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                                      
                                    }else{
                                        mensaje("las contraseñas no coinciden.");
                                    } 
                                }else{
                                    mensaje("El campo confirmar contraseña esta vacio.");
                                }
                            }else{
                                mensaje("El campo contraseña esta vacio.");
                            }   
                        }else{
                            mensaje("El correo electrónico de administrador debe ser válido y tener un dominio Gmail.");
                        }                        
                    }else{
                        mensaje("El telefono de administrador deve tener 10 numeros.");
                    }
                } else {
                    mensaje("El correo electrónico debe ser válido y tener un dominio GMAIL.");
                }
            }else{
                mensaje("El telefono de la empresa deBe tener 10 numeros.");
            }
        } else {
            mensaje("El NIT de la empresa debe tener 10 dígitos.");
        }
        //new VentanaPrincipal().setVisible(true);//habilitar el boton Recuperar cuenta
        
       // dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jPasswordField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField3ActionPerformed

    private void jPasswordField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crearCuenta().setVisible(true);
            }
        });
    }
    public static String encriptarContrasena(String contrasena) {
        return BCrypt.hashpw(contrasena, BCrypt.gensalt());
    }
    public static void mensaje(String mensaje){
        JOptionPane.showMessageDialog(null, mensaje, "STOKY", JOptionPane.WARNING_MESSAGE);
    }
    public static void mostrarMensajeExito(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje, "STOKY", JOptionPane.INFORMATION_MESSAGE);
    }
    public static void mostrarMensajeError(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje, "STOKY", JOptionPane.ERROR_MESSAGE);
    }
    
     public static boolean esNombreExistente(String nombre) throws ClassNotFoundException {
        String nombreTablaAdministrador = conex.conexion.tablaAdministrador;
        String nombreAdministrador = conex.conexion.ColubnaNombreAdministrador;
         
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

        String selectQuery = "SELECT 1 FROM "+nombreTablaAdministrador+" WHERE "+nombreAdministrador+" = ?";

        try {
            connection = conexion.getConnection();
            preparedStatement = connection.prepareStatement(selectQuery);
            preparedStatement.setString(1, nombre);
            resultSet = preparedStatement.executeQuery();

            return resultSet.next(); // Devuelve true si el nombre existe

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        return false;
    }
    public static void crearAdministrador(
        String inputnombreEmpresa, 
        String inputNitEmpresa, 
        String inputTelefonoEmpresa,
        String inputDireccionEmpresa,
        String inputCorreoElectronicoEmpresa,
        String inputNombreAdministrador, 
        String inputCedula,
        String inputTelefonoAdministrador, 
        String inputDireccionAdministrador,
        String correoAdmin,
        String inputRot,
        String inputContraseña){
        
        
        String nombreTablaAdministrador = conex.conexion.tablaAdministrador;
        String nombreempresa            = conex.conexion.ColubnaNombreEmpresa;
        String nitEmpresa               = conex.conexion.ColubnaNitEmpresa;
        String telefonoEmpresa          = conex.conexion.ColubnaTelefonoEmpresa;
        String direccionEmpresa         = conex.conexion.ColubnaDireccionEmpresa;
        String correoElectronico        = conex.conexion.ColubnaCorreoElectronicoEmpresa;
        String nombreAdministrador      = conex.conexion.ColubnaNombreAdministrador;
        String cedula                   = conex.conexion.ColubnaDocumentoIdentificacionAdministrador;
        String telefono                 = conex.conexion.ColubnaTelefonoAdministrador;
        String direccionAdministrador   = conex.conexion.ColubnaDireccionAdministrador;
        String correoAdministrador      = conex.conexion.ColubnaCorreoAdministrador;
        String rot                      = conex.conexion.ColubnaRotAdministrador;
        String contraseña               = conex.conexion.ColubnaContraseñaAdministrador;
        
        Connection connection = null;
        Statement statement = null;

        try {
            // Obtener la conexión a la base de datos
            connection = conexion.getConnection();
            System.out.println("Conexión establecida.");

            // Crear un statement
            statement = connection.createStatement();

            
            // Insertar un nuevo administrador
            String insertQuery = "INSERT INTO " + nombreTablaAdministrador + " (" +
                           nombreempresa +
                    ", " + nitEmpresa + 
                    ", " + telefonoEmpresa +
                    ", " + direccionEmpresa +
                    ", " + correoElectronico +
                    ", " + nombreAdministrador + 
                    ", " + cedula + 
                    ", " + telefono + 
                    ", " + direccionAdministrador +
                    ", " + correoAdministrador +
                    ", " + rot+ 
                    ", " + contraseña +
                    
                    ") VALUES ('"+
                           inputnombreEmpresa+
                    "', '"+inputNitEmpresa+
                    "', '"+inputTelefonoEmpresa+
                    "', '"+inputDireccionEmpresa+
                    "', '"+inputCorreoElectronicoEmpresa+
                    "', '"+inputNombreAdministrador+
                    "', '"+inputCedula+
                    "', '"+inputTelefonoAdministrador+
                    "', '"+inputDireccionAdministrador+
                    "', '"+correoAdmin+
                    "', '"+inputRot+
                    "', '"+inputContraseña+"')";

            // Ejecutar la consulta de inserción
            int filasAfectadas = statement.executeUpdate(insertQuery);

            // Verificar si se insertó correctamente
            if (filasAfectadas > 0) {
                mostrarMensajeExito("Usuario creado exitosamente.");
                main.usuario_registrado=true;
            } else {
                mostrarMensajeError("Error en la base de datos.");
                main.usuario_registrado=false;
            }

        } catch (ClassNotFoundException e) {
            mostrarMensajeError("No se encontró el driver JDBC de MySQL.");
            e.printStackTrace();
        } catch (SQLException e) {
            mostrarMensajeError("Fallo la conexion a la base de datos.");
            e.printStackTrace();
            
        } finally {
            try {
                if (statement != null) {
                    statement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    private static final String GMAIL_REGEX = "^[a-zA-Z0-9._%+-]+@gmail\\.com$";

    public static boolean esGmailValido(String email) {
        // Compilar la expresión regular
        Pattern pattern = Pattern.compile(GMAIL_REGEX);
        // Crear un matcher para la entrada
        Matcher matcher = pattern.matcher(email);
        // Devolver si coincide o no
        return matcher.matches();
    }
    public static String Comprobar_espacios_vacios(){
        String mensage= "";
         mensage = jTextField1.getText();
        if (jTextField1.getText()==null){
            jTextField1.setBackground(Color.red);
           
        }
        jTextField2.getText();
        jTextField3.getText();
        jTextField4.getText();
        jTextField5.getText();
        jTextField6.getText();
        jTextField7.getText();
        jTextField8.getText();
        jTextField10.getText();
        jTextField11.getText();
        return  mensage;
    }
     void SetImageLabel(JLabel labelName, String root){
        ImageIcon image = new ImageIcon(root);
	Icon icon = new ImageIcon(image.getImage().getScaledInstance(labelName.getWidth(),labelName.getHeight(), Image.SCALE_DEFAULT));
        labelName.setIcon(icon);
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JPanel jPanel1;
    public static javax.swing.JPasswordField jPasswordField2;
    public static javax.swing.JPasswordField jPasswordField3;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField10;
    public static javax.swing.JTextField jTextField11;
    public static javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField jTextField3;
    public static javax.swing.JTextField jTextField4;
    public static javax.swing.JTextField jTextField5;
    public static javax.swing.JTextField jTextField6;
    public static javax.swing.JTextField jTextField7;
    public static javax.swing.JTextField jTextField8;
    public static javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
